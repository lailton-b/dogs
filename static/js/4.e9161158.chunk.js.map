{"version":3,"sources":["Pages/Account/AccountStatistics/styles.ts","Pages/Account/AccountStatistics/index.tsx"],"names":["Container","styled","div","NoStatistics","props","theme","colors","bold_grey","AccountStatistics","token","localStorage","getItem","useFetch","request","loading","React","useState","data","setData","access","useMemo","total","length","forEach","acessos","Number","useEffect","a","STATS_GET","url","options","response","json","ok","getStats","Layout","Loading","Head","title","content","className","padAngle","innerRadius","x","y","domainPadding","dependentAxis"],"mappings":"+oCAEO,IAAMA,EAAYC,IAAOC,IAAV,KAkCTC,EAAeF,IAAOC,IAAV,KAQZ,SAACE,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,aC2B5BC,UAtDqB,WAClC,IAAMC,EAAQC,aAAaC,QAAQ,eADK,EAEXC,cAArBC,EAFgC,EAEhCA,QAASC,EAFuB,EAEvBA,QAFuB,EAIhBC,IAAMC,SAAkB,IAJR,mBAIjCC,EAJiC,KAI3BC,EAJ2B,KAKlCC,EAASJ,IAAMK,SAAQ,WAC3B,IAAIC,EAAQ,EAEZ,OADIJ,EAAKK,QAAQL,EAAKM,SAAQ,gBAAGC,EAAH,EAAGA,QAAH,OAAiBH,GAASI,OAAOD,MACxDH,IACN,CAACJ,IAmBJ,OAhBAF,IAAMW,WAAU,WAAM,4CACpB,sCAAAC,EAAA,0DACMlB,EADN,yBAE6BmB,YAAUnB,GAA3BoB,EAFZ,EAEYA,IAAKC,EAFjB,EAEiBA,QAFjB,SAGqCjB,EAAQgB,EAAKC,GAHlD,gBAGYC,EAHZ,EAGYA,SAAUC,EAHtB,EAGsBA,KACdD,GAAYA,EAASE,IAAIf,EAAQc,GAJzC,4CADoB,sBAWpB,OAXqB,WAAD,wBASpBE,GAEO,WACLhB,EAAQ,OAET,CAACL,EAASJ,IAETK,EAAgB,cAACqB,EAAA,EAAD,UAAQ,cAACC,EAAA,EAAD,MACnBnB,EAAKK,OAEV,eAACtB,EAAD,WACE,cAACqC,EAAA,EAAD,CAAMC,MAAM,kBAAeC,QAAQ,uCAEnC,0CAAcpB,KAEd,qBAAKqB,UAAU,eAAf,SACE,cAAC,IAAD,CAAYvB,KAAOA,EAAOwB,SAAW,EAAIC,YAAc,GAAKC,EAAE,QAAQC,EAAE,cAG1E,8BACE,eAAC,IAAD,CAAcC,cAAgB,GAA9B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAaC,eAAgB,IAC7B,cAAC,IAAD,CAAY7B,KAAOA,EAAO0B,EAAE,QAAQC,EAAE,oBAKpC3B,EAAKK,OAEH,KADL,cAACnB,EAAD,UAAc","file":"static/js/4.e9161158.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid !important;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 100px minmax(auto, 372px);\n  grid-gap: 30px;\n\n  p {\n    font-size: 2rem;\n    display: flex;\n    align-items: center;\n    grid-column: span 2;\n\n    padding: 32px;\n    box-shadow: 0 10px 20px rgba(0,0,0,.1);\n  }\n\n  > div {\n    box-shadow: 0 10px 20px rgba(0,0,0,.1);\n  }\n\n  .pieContainer {\n    padding: 32px;\n  }\n\n  @media screen and (max-width: 650px) {\n    grid-template-columns: 1fr;\n    grid-template-rows: 100px repeat(2, minmax(auto, 372px));\n\n    p {\n      grid-column: initial;\n    }\n  }\n`;\n\nexport const NoStatistics = styled.div` \n  display: flex;\n  justify-content: flex-end !important;\n  align-items: center;\n  height: 100%;\n\n  p {\n    margin: 70px 0 60px;\n    color: ${(props) => props.theme.colors.bold_grey};\n  }\n`;","import React from 'react';\nimport useFetch from '../../../hooks/useFetch';\nimport { STATS_GET } from '../../../Api';\nimport { VictoryAxis, VictoryBar, VictoryChart, VictoryPie } from 'victory';\n\nimport Head from '../../../Componets/Helper/Head';\nimport Loading from '../../../Componets/Helper/Loading';\nimport Layout from '../../../Componets/Layout';\n\nimport { Container, NoStatistics } from './styles';\n\ninterface IData {\n  id: number,\n  title: string, \n  acessos: string\n}\n\nconst AccountStatistics: React.FC = () => {\n  const token = localStorage.getItem('@dogs:token');\n  const { request, loading } = useFetch();\n\n  const [data, setData] = React.useState<IData[]>({} as IData[]);\n  const access = React.useMemo(() => {\n    let total = 0;\n    if (data.length) data.forEach(({ acessos }) => total += Number(acessos));\n    return total;\n  }, [data]);\n\n  /* Use Effect */\n  React.useEffect(() => {\n    async function getStats() {\n      if (token) {\n        const { url, options } = STATS_GET(token);\n        const { response, json } = await request(url, options);\n        if (response && response.ok) setData(json);\n      }\n    }\n\n    getStats();\n\n    return () => {\n      setData({} as IData[]);\n    }\n  }, [request, token]);\n\n  if (loading) return <Layout><Loading /></Layout>\n  else if (data.length) {\n    return (\n      <Container>\n        <Head title=\"Estatísticas\" content=\"Estatísticas da sua conta Dogs.\" />\n\n        <p>Acessos: { access }</p>\n  \n        <div className=\"pieContainer\">\n          <VictoryPie data={ data } padAngle={ 1 } innerRadius={ 60 } x=\"title\" y=\"acessos\" />\n        </div>\n  \n        <div>\n          <VictoryChart domainPadding={ 30 }>\n            <VictoryAxis />\n            <VictoryAxis dependentAxis={ true } />\n            <VictoryBar data={ data } x=\"title\" y=\"acessos\" />\n          </VictoryChart>\n        </div>\n      </Container>\n    )\n  } else if (!data.length) {\n    return <NoStatistics><p>Nenhuma estatística a exibir ):</p></NoStatistics>;\n  } else return null;\n}\n\nexport default AccountStatistics;\n"],"sourceRoot":""}